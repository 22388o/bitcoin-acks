version: '3'
services:
  postgres:
    image: postgres:alpine
    restart: always
    volumes:
      - "./db_data:/var/lib/postgresql/data"
    ports:
      - 5436:5432
    networks:
      - app-network
    environment:
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_DB: ${PGDB}
  flask:
    image: webapp-flask
    stdin_open: true
    tty: true
    build:
      context: .
      dockerfile: src/bitcoin_acks/webapp/Dockerfile
    volumes:
      - "./:/website"
    networks:
      - app-network
    depends_on:
      - postgres
    environment:
      PYTHONPATH: "/website/src/"
  dataworker:
    image: webapp-flask
    command: [ "python3", "bitcoin_acks/github_data/pull_request_events.py" ]
    stdin_open: true
    tty: true
    build:
      context: .
      dockerfile: src/bitcoin_acks/webapp/Dockerfile
    volumes:
      - "./:/website"
    networks:
      - app-network
    depends_on:
      - postgres
    environment:
      PYTHONPATH: "/website/src/"
  nginx:
    image: nginx:alpine
    stdin_open: true
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    networks:
      - app-network
    depends_on:
      - flask
    volumes:
      - "./src/bitcoin_acks/webapp/nginx-dev.conf:/etc/nginx/conf.d/default.conf"

networks:
  app-network:
    driver: bridge